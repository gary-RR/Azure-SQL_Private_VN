name: deploy

on:
  workflow_call:
    outputs:           
      vnetName:      
        value: ${{ jobs.deploy-vnet.outputs.vnetName }}        
    inputs:
      resourceGroupName:
        required: true
        type: string      
      appName:
        required: true
        type: string
      environmentType:
        required: true
        type: string
      createGateway:
        required: true
        type: string 
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      
jobs:  
  
  validate:     
      # environment: ${{ inputs.environmentType }}
      # needs: validate-vnet
      runs-on: ubuntu-latest      
      steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1       
        name: Sign in to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}     
      - if: inputs.environmentType != 'Production'
        uses: azure/arm-deploy@v1
        name: Run preflight validation       
        with:         
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ inputs.resourceGroupName }}
          template: ./deploy/modules/create_vnet_and_vpn.bicep
          parameters: >           
            appName=${{ inputs.appName }}
            createGateway=${{ inputs.createGateway }}
          deploymentMode: Validate
      - if: inputs.environmentType != 'Production'
        uses: azure/arm-deploy@v1
        name: Run what-if       
        with:          
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ inputs.resourceGroupName }}
          template: ./deploy/modules/create_vnet_and_vpn.bicep
          parameters: >           
            appName=${{ inputs.appName }}
            createGateway=${{ inputs.createGateway }}
          additionalArguments: --what-if   

  deploy-vnet:     
      environment: ${{ inputs.environmentType }}
      needs: validate
      runs-on: ubuntu-latest
      outputs:       
        
        vnetName: ${{steps.deploy-vnet.outputs.vnetName}}
      steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1       
        name: Sign in to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # - uses: Azure/CLI@v1
      #   with:
      #     inlineScript: |
      #       #!/bin/bash
      #       chmod +rx ./creat_pre_req.sh
      #       ./creat_pre_req.sh Azure-SQL_Private_VN AzureSQLPrivateVN test 'gary-RR' 'Azure-SQL_Private_VN'
      #       echo "Azure resource group created"
      - if: inputs.environmentType != 'Production'
        uses: azure/arm-deploy@v1
        name: deploy
        id: deploy-vnet
        with:
          failOnStdErr: false
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ inputs.resourceGroupName }}
          template: ./deploy/modules/create_vnet_and_vpn.bicep
          parameters: >           
            appName=${{ inputs.appName }}
            createGateway=${{ inputs.createGateway }}

      # - name: Echo vnetName
      #   run: echo "::set-output name=vvnetName::${{ steps.deploy-vnet.outputs.vnetName }}"
        
  
              
       
