name: deploy

on:
  workflow_call:
    inputs:
      resourceGroupName:
        required: true
        type: string
      environmentType:
        required: true
        type: string
      appName:
        required: true
        type: string
      createGateway:
        required: true
        type: string
      vnetAddressPrefixes:
        required: true
        type: string  
      subnet1AddressPrefixes: 
        required: true
        type: string  
      subnet2AddressPrefixes:
        required: true
        type: string
      subnet3AddressPrefixes:
        required: true
        type: string
      vpnClientAddressPrefix:
        required: true
        type: string
      createWindowsServer1:
        required: true
        type: boolean
      createLinuxServer1:
        required: true
        type: boolean
      createWindowsDesktop1:
        required: true
        type: boolean
      adminDBLoginName:
        required: true
        type: string
      databaseName:
        required: true
        type: string
      vmSize:
        required: true
        type: string
      vmWindowsLoginUser:
        required: true
        type: string
      vmLinuxLoginUser:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      reviewApiKey:
        required: true
      sqlServerAdministratorLoginPassword:
        required: true   
      adminDBPassword:
        required: true             
      vmWindowsLoginPassword:
        required: true
      vmLinuxLoginPassword:
        required: true
        

jobs:
  validate:
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v3
     - uses: azure/login@v1
       name: Sign in to Azure
       with:
         client-id: ${{ secrets.AZURE_CLIENT_ID_TEST }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
     - if: inputs.environmentType != 'Production'
       uses: azure/arm-deploy@v1
       name: Run preflight validation
       with:
         deploymentName: ${{ github.run_number }}
         resourceGroupName: ${{ inputs.resourceGroupName }}
         template: ./deploy/modules/create_vnet_and_vpn.bicep
         parameters: >
           environmentType=${{ inputs.environmentType }}
           appName=${{ inputs.appName }}
           createGateway=${{ inputs.createGateway }}
           vnetAddressPrefixes=${{ inputs.vnetAddressPrefixes }}
           subnet1AddressPrefixes=${{ inputs.subnet1AddressPrefixes }}
           subnet2AddressPrefixes=${{ inputs.subnet2AddressPrefixes }}
           subnet3AddressPrefixes=${{ inputs.subnet3AddressPrefixes }}
           vpnClientAddressPrefix=${{ inputs.vpnClientAddressPrefix }}
         deploymentMode: Validate



