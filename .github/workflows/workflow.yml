name: deploy-toy-website-end-to-end
concurrency: toy-company

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:

  # Build the application and database.
#   build:
#     uses: ./.github/workflows/build.yml

#   # Lint the Bicep file.
#   lint:
#     uses: ./.github/workflows/lint.yml

  deploy-vnet-test:            
      uses: ./.github/workflows/deploy-vnet.yml
    #   needs: [build, lint]
      with:
        environmentType: Test
        resourceGroupName: AzureSQLPrivateVNTest
        appName: cosmo
        createGateway: no 
        createWindowsServer1: false
        createLinuxServer1: false
        createWindowsDesktop1: false
        adminDBLoginName: gary
        databaseName: slaesfloor
        vmSize: 'Standard_A0'  
        vmWindowsLoginUser: gary
        vmLinuxLoginUser: gary         
      secrets:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_TEST }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          adminDBPassword: ${{ secrets.ADMINDBPASSWORD }}
          vmWindowsLoginPassword: ${{ secrets.VMWINDOWSLOGINPASSWORD }}
          vmLinuxLoginPassword: ${{ secrets.VMLINUXLOGINPASSWORD }}

  job2:
     runs-on: ubuntu-latest
     needs: deploy-vnet-test
     steps:      
       - run: echo ${{ needs.deploy-vnet-test.outputs.vnetName}}
    
  deploy-infra-test:      
      uses: ./.github/workflows/deploy-infra.yml 
      needs: [deploy-vnet-test]
      with:
        environmentType: Test
        resourceGroupName: AzureSQLPrivateVNTest
        appName: cosmo       
        vnetName: ${{ needs.deploy-vnet-test.outputs.vnetName }}
        createWindowsServer1: true
        createLinuxServer1: true
        createWindowsDesktop1: true
        adminDBLoginName: gary
        databaseName: slaesfloor
        vmSize: 'Standard_A0'  
        vmWindowsLoginUser: gary
        vmLinuxLoginUser: gary                  
      secrets:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_TEST }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          adminDBPassword: ${{ secrets.ADMINDBPASSWORD }}
          vmWindowsLoginPassword: ${{ secrets.VMWINDOWSLOGINPASSWORD }}
          vmLinuxLoginPassword: ${{ secrets.VMLINUXLOGINPASSWORD }}